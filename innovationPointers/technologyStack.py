# "builtWith.py" is used to identify the technology stack of each website
# BuiltWith API has been used under the free tier usage (50 hits per user)
# API help: "https://api.builtwith.com/"
import os.path
import re

import requests
from pymongo import MongoClient
from utility.utils import formatUrl
from utility import configs as configs


# from scrapy import log

# an object to hold all the technology stack attributes
class TechObj(object):
    def __init__(self, name, tag, category):
        self.name = name  # name of the technology
        self.tag = tag  # tag associated with the technology
        self.category = category  # category the technology belongs to


# Saves the technology stack information to a new  intermediate collection
def saveTechObj(techObj, site, client):
    site = formatUrl(site)
    coll = configs.getInnovCountsColl(client)  # previous collection, to which the technology stack info would be appended
    cleanedDataCursor = coll.find_one({'url': site})
    if cleanedDataCursor is not None:
        # cleanedDataCursor['technologyBuildWith'] = techObj
        coll.update_one(cleanedDataCursor,
                        {"$set": {'technologyBuildWith': techObj}})  # inserting documents into the new collection
        # log.start()
        # intColl = db.innoPointers_techStack  # a new collection
        # intColl.insert_one(cleanedDataCursor)  # inserting documents into the new collection


def calTechStack(index):
    __location__ = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))

    #  A free tier of the builtwith API is being used, which has a limit of 50 hits to the API #
    # file = os.path.join(__location__, '../Sites/sites10.txt')
    file = configs.getSiteFile(index)
    client = MongoClient()
    # file is opened and each url is read
    with open(file) as sites:

        technologyObjectsPerSite = []

        for site in sites:

            site = site.rstrip('\n')
            # payload contains all the attributes for calling the API
            # new ACCESS_KEY has to be generated by each user and replaced in the following line
            payload = {'KEY': '605526f0-f3bd-4e83-9caa-077460790883', 'LOOKUP': site, 'NOMETA': 'yes',
                       'LIVEONLY': 'yes', 'HIDEDL': 'yes'}
            response = requests.get('https://api.builtwith.com/v11/api.json', params=payload)  # builtwith API call
            json_data = response.json()

            if (len(json_data['Results']) != 0):
                technologies = json_data['Results'][0]['Result']['Paths'][0]['Technologies']

                for technology in technologies:
                    tempTechObject = {}
                    tempTechObject['name'] = technology['Name']
                    tempTechObject['tag'] = technology['Tag']
                    tempTechObject['categories'] = technology['Categories']

                    technologyObjectsPerSite.append(tempTechObject)

                saveTechObj(technologyObjectsPerSite, site, client)
            else:
                print("builtwith API has been used up!")
                break

    print("Identification of technology stack completed!!")
    print("innoPointers_techStack has been added to InnovationCount in the database.")
    client.close()